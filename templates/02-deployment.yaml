apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Values.Deployment.nginx.name }} #nginx
  namespace: {{ .Values.namespace }} #dev
  labels:
    app: {{ .Values.Deployment.nginx.name }} #nginx
spec:
  selector:
    matchLabels:
      app: {{ .Values.Deployment.nginx.name }} #nginx
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  {{ .Values.Deployment.nginx.name }} #nginx
    spec:
      containers:
      - name:  {{ .Values.Deployment.nginx.name }} #nginx
        image:  {{ .Values.Deployment.nginx.image }} #nginx
        imagePullPolicy: {{ .Values.Deployment.imagePullPolicy }} #IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: {{ .Values.Deployment.nginx.port}} #9090
          name:  {{ .Values.Deployment.nginx.name }} #nginx
        volumeMounts:
        - name: {{ .Values.configmap.nginx.name }} #nginx-config
          mountPath: /etc/nginx/conf.d/
      volumes:
        - name: {{ .Values.configmap.nginx.name }} #nginx-config
          configMap:
            name:  {{ .Values.configmap.nginx.name }} #nginx-config
      restartPolicy: Always
